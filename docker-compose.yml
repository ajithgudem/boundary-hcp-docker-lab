version: '3.8'
services:
  boundary-hcp-worker:
    image: hashicorp/boundary-worker-hcp
    container_name: boundary-hcp-worker
    ports:
      - "9203:9203"
      - "9202:9202"
    restart: always
    volumes:
      - ./config/boundary/config:/boundary-hcp-worker/config
      - ./config/boundary/logs:/boundary-hcp-worker/logs
      - ./config/boundary/file:/boundary-hcp-worker/file
    cap_add:
      - IPC_LOCK
    entrypoint: boundary-worker server -config=/boundary-hcp-worker/config/config.hcl

  vault:
    image: hashicorp/vault
    container_name: vault
    ports:
      - "8200:8200"
    restart: always
    volumes:
      - ./config/vault/logs:/vault/logs
      - ./config/vault/file:/vault/file
      - ./config/vault/config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.hcl


  openssh-server:
    image: lscr.io/linuxserver/openssh-server:latest
    container_name: openssh-win-server
    hostname: openssh-win-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PUBLIC_KEY_FILE=/keys/openssh-key.pub
      - SUDO_ACCESS=false
      - USER_NAME=admin
    volumes:
      - ./config/openssh/:/keys
    ports:
      - 2222:2222
    restart: unless-stopped
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: dbroot
      POSTGRES_DB: database
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  # vyos-router:
  #   image: vyos/vyos-build
  #   container_name: vyos-router
  #   restart: unless-stopped
  #   privileged: true
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - ./config/router/:/config
  #     - ./config/router/:/keys
  #   environment:
  #     - SSH_KEY=/keys/openssh-key.pub


  control-plane:
    image: kindest/node:v1.22.5
    privileged: true
    network_mode: "host"
    ports:
      - "6443:6443"
      - "8080:8080"
    command: ["/usr/local/bin/entrypoint.sh", "kube-apiserver", "--advertise-address=127.0.0.1", "--runtime-config=api/all=true"]
    volumes:
      - control-plane-data:/data
      - ./kubeadm.yaml:/kubeadm.yaml
    environment:
      - KUBECONFIG=/data/kubeconfig.yaml
    deploy:
      resources:
        limits:
          cpu: 1
          memory: 512M
        reservations:
          cpu: 0.5
          memory: 256M
  worker-1:
    image: kindest/node:v1.22.5
    privileged: true
    network_mode: "host"
    depends_on:
      - control-plane
    command: ["/usr/local/bin/entrypoint.sh", "kubelet"]
    volumes:
      - worker-1-data:/data
      - ./kubeadm.yaml:/kubeadm.yaml
    environment:
      - KUBECONFIG=/data/kubeconfig.yaml
    deploy:
      resources:
        limits:
          cpu: 1
          memory: 512M
        reservations:
          cpu: 0.5
          memory: 256M
  worker-2:
    image: kindest/node:v1.22.5
    privileged: true
    network_mode: "host"
    depends_on:
      - control-plane
    command: ["/usr/local/bin/entrypoint.sh", "kubelet"]
    volumes:
      - worker-2-data:/data
      - ./kubeadm.yaml:/kubeadm.yaml
    environment:
      - KUBECONFIG=/data/kubeconfig.yaml
    deploy:
      resources:
        limits:
          cpu: 1
          memory: 512M
        reservations:
          cpu: 0.5
          memory: 256M

volumes:
  pgdata:
  control-plane-data:
  worker-1-data:
  worker-2-data:

